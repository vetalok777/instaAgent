name: Deploy to Google Cloud Run

# Startup condition
on:
  push:
    branches:
      - master # This process is triggered every time when push to the ‘main’ branch.

# Variable environments that will be available throughout the process
env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: insta-agent
  REGION: us-central1
  REPO_NAME: ai-agent

# Tasks to be performed
jobs:
  deploy:
    # Launching on Ubuntu
    runs-on: ubuntu-latest
    steps:
      # Step 1: Cloning code from repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Authentication ti Google Cloud with a secret key
      - name: Authenticate to Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      # Step 3: Configuring gcloud CLI
      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'

      # Step 4: Configuring Docker for working with Google repository
      - name: Configure Docker
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      # Step 5: Build and Push Docker Docker-образу
      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }} .
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }}

      # Step 6: Deploying new version on Cloud Run
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
            --platform=managed \
            --region=${{ env.REGION }} \
            --min-instances=1 \
            --memory=1Gi \
            --cpu=1 \
            --cpu-boost \
            --allow-unauthenticated \
            --set-secrets="DB_PASSWORD=db-password:latest,GEMINI_API_KEY=gemini-api-key:latest,INSTAGRAM_ACCESS_TOKEN=instagram-token:latest,INSTAGRAM_VERIFY_TOKEN=instagram-verify-token:latest"